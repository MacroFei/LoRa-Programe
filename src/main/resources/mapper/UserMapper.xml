<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xlccc.ssm.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.xlccc.ssm.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, password, phone, email, area, role, category, uuid, remark
  </sql>
  <select id="selectByExample" parameterType="com.xlccc.ssm.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from user_demo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_demo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_demo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xlccc.ssm.pojo.User" useGeneratedKeys="true">
    insert into user_demo (name, password, phone, 
      email, area, role, 
      category, uuid, remark
      )
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, 
      #{category,jdbcType=VARCHAR}, #{uuid,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xlccc.ssm.pojo.User" useGeneratedKeys="true">
    insert into user_demo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xlccc.ssm.pojo.User">
    update user_demo
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xlccc.ssm.pojo.User">
    update user_demo
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      category = #{category,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectTotalNumber" parameterType="java.lang.Integer" resultType="Integer">
    SELECT COUNT(id) FROM user_demo
  </select>

  <select id="login" parameterType="String" resultMap="BaseResultMap">
    select * from user_demo where name = #{name,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>

  <select id="select" parameterType="com.xlccc.ssm.pojo.User" resultMap="BaseResultMap">
    select * from user_demo where name = #{name,jdbcType=VARCHAR}
  </select>

  <insert id="addUser" keyColumn="id" keyProperty="id" parameterType="com.xlccc.ssm.pojo.User"
          useGeneratedKeys="true">
    insert into user_demo (name, phone,
    email, role, area, password ,category
    )
    values (#{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
    #{email,jdbcType=VARCHAR},  #{role,jdbcType=INTEGER}, #{area,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{category,jdbcType=VARCHAR}
    )
  </insert>

  <select id="selectName" parameterType="String" resultMap="BaseResultMap">
    select * from user_demo
    <where>
      <if test="name!=null and name!=''">
        and name like "%"#{name}"%"
      </if>
    </where>
  </select>

  <select id="selectUserByRole" parameterType="String" resultMap="BaseResultMap">
    select * from user_demo
    <where>
      <if test="category!=null and category!=''">
        and category = #{category}
      </if>
    </where>
  </select>

  <update id="updateUUID" parameterType="String">
    update user_demo
    set uuid = #{uuid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updatePassword" parameterType="com.xlccc.ssm.pojo.User">
    update user_demo
    set password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>